name: 'template-iot'

services:
  api:
    image: kuzzleio/kuzzle-runner:22
    command: sh /var/app/start.sh api
    volumes:
      - .:/var/app
      - ~/.npmrc:/root/.npmrc
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - '7512:7512'
      - '7511:7511'
      - '7510:7510'
      - '9229:9229'
      - '1883:1883'
    environment:
      - kuzzle_services__storageEngine__client__node=http://localhost:9200
      - kuzzle_services__storageEngine__commonMapping__dynamic=true
      - kuzzle_services__internalCache__node__host=localhost
      - kuzzle_services__memoryStorage__node__host=localhost
      - NODE_ENV=${NODE_ENV:-development}
      - DEBUG=${DEBUG:-none}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:7512/_healthcheck']
      timeout: 10s
      interval: 10s
      retries: 30
      start_period: 1m
    network_mode: 'host'

  web:
    image: kuzzleio/kuzzle-runner:22
    command: sh /var/app/start.sh web
    volumes:
      - .:/var/app
    depends_on:
      api:
        condition: service_healthy
    ports:
      - '8081:8081'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8081']
      interval: 5s
      timeout: 5s
      retries: 30
    network_mode: 'host'

  redis:
    image: redis:5
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 30
    network_mode: 'host'

  elasticsearch:
    image: kuzzleio/elasticsearch:7
    volumes:
      - '/tmp/snapshots:/tmp/snapshots'
    ports:
      - '9200:9200'
      - '9300:9300'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9200']
      interval: 5s
      timeout: 5s
      retries: 30
    network_mode: 'host'

  keycloak:
    build:
      dockerfile: Dockerfile
      context: ./apps/keycloak
      target: local

    command:
      - start-dev
      - --import-realm
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '8080:8080'
      - '9081:9081'
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin-kuzzle-kiotp
      - KC_BOOTSTRAP_ADMIN_PASSWORD=Test1234
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://localhost:5432/keycloak
      - KC_DB_USER=keycloak
      - KC_DB_PASSWORD=password
      - KC_HOSTNAME=http://localhost:8080
      - KC_HOSTNAME_ADMIN=http://localhost:8080
      - KC_HOSTNAME_STRICT=true
      - KC_HTTP_MANAGEMENT_PORT=9081
      - KC_HEALTH_ENABLED=true
      - KC_IMPORT=/opt/keycloak/data/import/realm-kuzzle.json
    healthcheck:
      test: [
          'CMD-SHELL',
          "exec 3<>/dev/tcp/localhost/9081; \
          echo -en 'GET /health/ready' >&3; \
          # Give the server a moment to respond, then search for 'UP'
          if timeout 3 cat <&3 | grep -m 1 'UP'; then \
          exec 3<&-; exec 3>&-; exit 0; \
          else \
          exec 3<&-; exec 3>&-; exit 1; \
          fi",
        ]
      interval: 30s
      retries: 5
      start_period: 2s
      timeout: 10s
    network_mode: 'host'

  postgres:
    image: postgres:17
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      PGUSER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d keycloak -U keycloak']
      interval: 30s
      retries: 5
      start_period: 2s
      timeout: 10s
    network_mode: 'host'

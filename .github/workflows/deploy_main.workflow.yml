name: Deploy Main Environment

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: 22
  KUZZLE_ENV: main
  PLATFORMS: linux/amd64 #,linux/arm64

jobs:
  set_vars:
    name: Set workflow variables
    runs-on: ubuntu-24.04
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Compute variables
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  backend_artefact:
    name: Backend artefact
    runs-on: ubuntu-24.04
    needs: [set_vars]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Copy package-lock.json
        run: cp ./package-lock.json ./apps/api

      - name: Connect to paas services
        uses: ./.github/actions/paas-login-services
        with:
          registry: ${{ secrets.KUZZLE_PAAS_REGISTRY }}
          registry_username: ${{ secrets.KUZZLE_PAAS_REGISTRY_USERNAME }}
          registry_password: ${{ secrets.KUZZLE_PAAS_REGISTRY_PASSWORD }}
          paas_username: ${{ secrets.KUZZLE_PAAS_USERNAME }}
          paas_password: ${{ secrets.KUZZLE_PAAS_PASSWORD }}
          npmrc_output_dir: ./apps/api
          login_only: true

      - name: Build & Push paas docker image
        uses: ./.github/actions/paas-docker-build
        with:
          context: ./apps/api
          tags: ${{ secrets.KUZZLE_PAAS_REGISTRY }}/${{ secrets.KUZZLE_PAAS_PROJECT }}/kuzzle:${{ needs.set_vars.outputs.sha_short }}
          scanners: true
          platforms: ${{ env.PLATFORMS }}
          build-args: |
            KUZZLE_VAULT_KEY=${{ secrets.KUZZLE_VAULT_KEY }}
            KUZZLE_ENV=${{ env.KUZZLE_ENV }}

  frontend_artefact:
    name: Frontend artefact
    runs-on: ubuntu-24.04
    needs: [set_vars]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get current commit short SHA
        run: echo "(already set in set_vars job, not needed here)"

      - name: Copy package-lock.json
        run: cp ./package-lock.json ./apps/web

      - name: Connect to paas services
        uses: ./.github/actions/paas-login-services
        with:
          registry: ${{ secrets.KUZZLE_PAAS_REGISTRY }}
          registry_username: ${{ secrets.KUZZLE_PAAS_REGISTRY_USERNAME }}
          registry_password: ${{ secrets.KUZZLE_PAAS_REGISTRY_PASSWORD }}
          paas_username: ${{ secrets.KUZZLE_PAAS_USERNAME }}
          paas_password: ${{ secrets.KUZZLE_PAAS_PASSWORD }}
          npmrc_output_dir: ./apps/web
          login_only: true

      - name: Build & Push paas docker image
        uses: ./.github/actions/paas-docker-build
        with:
          context: ./apps/web
          tags: ${{ secrets.KUZZLE_PAAS_REGISTRY }}/${{ secrets.KUZZLE_PAAS_PROJECT }}/iot:${{ needs.set_vars.outputs.sha_short }}
          scanners: true
          platforms: ${{ env.PLATFORMS }}
          build-args: |
            VUE_APP_BACKEND=${{ github.ref_name }}

  deploy_backend:
    name: Deploy backend artefact
    runs-on: ubuntu-24.04
    needs: [backend_artefact, frontend_artefact, set_vars]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Deploy to PaaS
        uses: kuzzleio/paas-action@v1.2.2
        with:
          username: ${{ secrets.KUZZLE_PAAS_USERNAME }}
          password: ${{ secrets.KUZZLE_PAAS_PASSWORD }}
          project: ${{ secrets.KUZZLE_PAAS_PROJECT }}
          environment: ${{ github.ref_name }}
          application: api
          rollback: true
          timeout: 180
          image: ${{ secrets.KUZZLE_PAAS_REGISTRY }}/${{ secrets.KUZZLE_PAAS_PROJECT }}/kuzzle:${{ needs.set_vars.outputs.sha_short }}

  deploy_iot_console:
    name: Deploy IoT Console App to server
    runs-on: ubuntu-24.04
    needs: [deploy_backend, set_vars]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Deploy to PaaS
        uses: kuzzleio/paas-action@v1.2.2
        with:
          username: ${{ secrets.KUZZLE_PAAS_USERNAME }}
          password: ${{ secrets.KUZZLE_PAAS_PASSWORD }}
          project: ${{ secrets.KUZZLE_PAAS_PROJECT }}
          environment: ${{ github.ref_name }}
          application: iot
          rollback: true
          timeout: 180
          image: ${{ secrets.KUZZLE_PAAS_REGISTRY }}/${{ secrets.KUZZLE_PAAS_PROJECT }}/iot:${{ needs.set_vars.outputs.sha_short }}

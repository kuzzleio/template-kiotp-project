name: Push on branch checks

on:
  pull_request:
  push:
    branches:
      - master
      - "[0-9]+-dev"

env:
  NODE_VERSION: "16"

jobs:
  backend_lint:
    name: Lint Backend
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Login PaaS
        uses: kuzzleio/paas-action@v0.5.7
        with:
          username: ${{ secrets.KUZZLE_PAAS_USERNAME }}
          password: ${{ secrets.KUZZLE_PAAS_PASSWORD }}
          npmrc_output_dir: ./backend
          login_only: true
      - name: Lint Backend
        run: |
          cd backend
          npm ci
          npm run test:lint
          npm run build

  backend_functional_tests:
    name: Functional Tests Backend
    runs-on: ubuntu-20.04
    needs: [backend_lint]
    env:
      KUZZLE_VAULT_KEY: ${{ secrets.KUZZLE_VAULT_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Login PaaS
        uses: kuzzleio/paas-action@v0.5.7
        with:
          username: ${{ secrets.KUZZLE_PAAS_USERNAME }}
          password: ${{ secrets.KUZZLE_PAAS_PASSWORD }}
          npmrc_output_dir: ./backend
          login_only: true
      - name: Functional tests
        run: |
          cd backend
          npm ci
          npm run build
          DOCKER_COMMAND="node app.js" docker-compose up -d
          bash features/wait-kuzzle.sh
          npm run test:functional

  iot_console_lint:
    name: Lint IoT Console
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Login PaaS
        uses: kuzzleio/paas-action@v0.5.7
        with:
          username: ${{ secrets.KUZZLE_PAAS_USERNAME }}
          password: ${{ secrets.KUZZLE_PAAS_PASSWORD }}
          npmrc_output_dir: ./iot-console
          login_only: true
      - name: Lint IoT Console
        run: |
          cd iot-console
          npm ci
          npm run test:lint
